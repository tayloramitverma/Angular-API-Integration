{"version":3,"file":"ngx-infinite-scroll.es5.js","sources":["../../ngx-infinite-scroll.ts","../../public_api.ts","../../src/ngx-infinite-scroll.ts","../../src/modules/ngx-infinite-scroll.module.ts","../../src/modules/infinite-scroll.directive.ts","../../src/services/scroll-register.ts","../../src/services/scroll-state.ts","../../src/services/scroll-resolver.ts","../../src/services/position-resolver.ts","../../src/services/event-trigger.ts","../../src/services/axis-resolver.ts","../../src/services/ngx-ins-utils.ts"],"sourcesContent":["export * from './public_api';\n","/**\n * Angular library starter.\n * Build an Angular library compatible with AoT compilation & Tree shaking.\n * Written by Roberto Simonetti.\n * MIT license.\n * https://github.com/robisim74/angular-library-starter\n */\n\n/**\n * Entry point for all public APIs of the package.\n */\nexport * from './src/ngx-infinite-scroll';\n\n","// Public classes.\nexport {\n  ContainerRef,\n  InfiniteScrollEvent,\n  IPositionElements,\n  IPositionStats,\n  IResolver\n} from './models';\n\nexport { InfiniteScrollDirective } from './modules/infinite-scroll.directive';\nexport { InfiniteScrollModule } from './modules/ngx-infinite-scroll.module';\n","import { NgModule } from '@angular/core';\n\nimport { InfiniteScrollDirective } from './infinite-scroll.directive';\n\n@NgModule({\n  declarations: [InfiniteScrollDirective],\n  exports: [InfiniteScrollDirective],\n  imports: [],\n  providers: []\n})\nexport class InfiniteScrollModule { }\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\n\nimport { InfiniteScrollEvent, IInfiniteScrollAction } from '../models';\nimport { hasWindowDefined, inputPropChanged } from '../services/ngx-ins-utils';\nimport { createScroller, InfiniteScrollActions } from '../services/scroll-register';\n\n@Directive({\n  selector: '[infiniteScroll], [infinite-scroll], [data-infinite-scroll]'\n})\nexport class InfiniteScrollDirective\n  implements OnDestroy, OnChanges, AfterViewInit {\n  @Output() scrolled = new EventEmitter<InfiniteScrollEvent>();\n  @Output() scrolledUp = new EventEmitter<InfiniteScrollEvent>();\n\n  @Input() infiniteScrollDistance: number = 2;\n  @Input() infiniteScrollUpDistance: number = 1.5;\n  @Input() infiniteScrollThrottle: number = 150;\n  @Input() infiniteScrollDisabled: boolean = false;\n  @Input() infiniteScrollContainer: any = null;\n  @Input() scrollWindow: boolean = true;\n  @Input() immediateCheck: boolean = false;\n  @Input() horizontal: boolean = false;\n  @Input() alwaysCallback: boolean = false;\n  @Input() fromRoot: boolean = false;\n\n  private disposeScroller: Subscription;\n\n  constructor(private element: ElementRef, private zone: NgZone) { }\n\n  ngAfterViewInit() {\n    if (!this.infiniteScrollDisabled) {\n      this.setup();\n    }\n  }\n\n  ngOnChanges({ infiniteScrollContainer, infiniteScrollDisabled, infiniteScrollDistance }: SimpleChanges) {\n    const containerChanged = inputPropChanged(infiniteScrollContainer);\n    const disabledChanged = inputPropChanged(infiniteScrollDisabled);\n    const distanceChanged = inputPropChanged(infiniteScrollDistance);\n    const shouldSetup = (!disabledChanged && !this.infiniteScrollDisabled) ||\n      (disabledChanged && !infiniteScrollDisabled.currentValue) || distanceChanged;\n\n    if (containerChanged || disabledChanged || distanceChanged) {\n      this.destroyScroller();\n      if (shouldSetup) {\n        this.setup();\n      }\n    }\n  }\n\n  setup() {\n    if (hasWindowDefined()) {\n      this.zone.runOutsideAngular(() => {\n        this.disposeScroller = createScroller({\n          fromRoot: this.fromRoot,\n          alwaysCallback: this.alwaysCallback,\n          disable: this.infiniteScrollDisabled,\n          downDistance: this.infiniteScrollDistance,\n          element: this.element,\n          horizontal: this.horizontal,\n          scrollContainer: this.infiniteScrollContainer,\n          scrollWindow: this.scrollWindow,\n          throttle: this.infiniteScrollThrottle,\n          upDistance: this.infiniteScrollUpDistance\n        }).subscribe((payload: any) => this.zone.run(() => this.handleOnScroll(payload)));\n      });\n    }\n  }\n\n  handleOnScroll({ type, payload }: IInfiniteScrollAction) {\n    switch (type) {\n      case InfiniteScrollActions.DOWN:\n        return this.scrolled.emit(payload);\n\n      case InfiniteScrollActions.UP:\n        return this.scrolledUp.emit(payload);\n\n      default:\n        return;\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroyScroller();\n  }\n\n  destroyScroller() {\n    if (this.disposeScroller) {\n      this.disposeScroller.unsubscribe();\n    }\n  }\n}\n","import { Observable, of, fromEvent } from 'rxjs';\nimport { map, mergeMap, tap, sampleTime, filter } from 'rxjs/operators';\n\nimport * as Models from '../models';\nimport { AxisResolver } from './axis-resolver';\nimport { shouldTriggerEvents } from './event-trigger';\nimport { resolveContainerElement } from './ngx-ins-utils';\nimport { calculatePoints, createResolver } from './position-resolver';\nimport * as ScrollResolver from './scroll-resolver';\nimport { ScrollState } from './scroll-state';\n\nexport function createScroller(config: Models.IScroller) {\n  const { scrollContainer, scrollWindow, element, fromRoot } = config;\n  const resolver = createResolver({\n    axis: new AxisResolver(!config.horizontal),\n    windowElement: resolveContainerElement(\n      scrollContainer,\n      scrollWindow,\n      element,\n      fromRoot\n    )\n  });\n  const scrollState = new ScrollState({\n    totalToScroll: calculatePoints(element, resolver)\n  });\n  const options: Models.IScrollRegisterConfig = {\n    container: resolver.container,\n    throttle: config.throttle\n  };\n  const distance = {\n    up: config.upDistance,\n    down: config.downDistance\n  };\n  return attachScrollEvent(options).pipe(\n    mergeMap(() => of(calculatePoints(element, resolver))),\n    map((positionStats: Models.IPositionStats) =>\n      toInfiniteScrollParams(\n        scrollState.lastScrollPosition,\n        positionStats,\n        distance\n      )\n    ),\n    tap(({ stats }: Models.IScrollParams) =>\n      scrollState.updateScroll(stats.scrolled, stats.totalToScroll)\n    ),\n    filter(\n      ({ fire, scrollDown, stats: { totalToScroll } }: Models.IScrollParams) =>\n        shouldTriggerEvents(\n          config.alwaysCallback,\n          fire,\n          scrollState.isTriggeredScroll(totalToScroll, scrollDown)\n        )\n    ),\n    tap(({ scrollDown, stats: { totalToScroll } }: Models.IScrollParams) => {\n      scrollState.updateTriggeredFlag(totalToScroll, scrollDown);\n    }),\n    map(toInfiniteScrollAction)\n  );\n}\n\nexport function attachScrollEvent(\n  options: Models.IScrollRegisterConfig\n): Observable<{}> {\n  let obs = fromEvent(options.container, 'scroll');\n  // For an unknown reason calling `sampleTime()` causes trouble for many users, even with `options.throttle = 0`.\n  // Let's avoid calling the function unless needed.\n  // See https://github.com/orizens/ngx-infinite-scroll/issues/198\n  if (options.throttle) {\n    obs = obs.pipe(sampleTime(options.throttle));\n  }\n  return obs;\n}\n\nexport function toInfiniteScrollParams(\n  lastScrollPosition: number,\n  stats: Models.IPositionStats,\n  distance: Models.IScrollerDistance\n): Models.IScrollParams {\n  const { scrollDown, fire } = ScrollResolver.getScrollStats(\n    lastScrollPosition,\n    stats,\n    distance\n  );\n  return {\n    scrollDown,\n    fire,\n    stats\n  };\n}\n\nexport const InfiniteScrollActions = {\n  DOWN: '[NGX_ISE] DOWN',\n  UP: '[NGX_ISE] UP'\n};\n\nexport function toInfiniteScrollAction(\n  response: Models.IScrollParams\n): Models.IInfiniteScrollAction {\n  const {\n    scrollDown,\n    stats: { scrolled: currentScrollPosition }\n  } = response;\n  return {\n    type: scrollDown ? InfiniteScrollActions.DOWN : InfiniteScrollActions.UP,\n    payload: {\n      currentScrollPosition\n    }\n  };\n}\n","import { IScrollState, IScrollerDistance } from '../models';\n\nexport class ScrollState implements IScrollState {\n  lastScrollPosition = 0;\n  lastTotalToScroll = 0;\n  totalToScroll = 0;\n  triggered: IScrollerDistance = {\n    down: 0,\n    up: 0\n  };\n\n  constructor({ totalToScroll }) {\n    this.totalToScroll = totalToScroll;\n  }\n\n  updateScrollPosition(position: number) {\n    return (this.lastScrollPosition = position);\n  }\n\n  updateTotalToScroll(totalToScroll: number) {\n    if (this.lastTotalToScroll !== totalToScroll) {\n      this.lastTotalToScroll = this.totalToScroll;\n      this.totalToScroll = totalToScroll;\n    }\n  }\n\n  updateScroll(scrolledUntilNow: number, totalToScroll: number) {\n    this.updateScrollPosition(scrolledUntilNow);\n    this.updateTotalToScroll(totalToScroll);\n  }\n\n  updateTriggeredFlag(scroll, isScrollingDown: boolean) {\n    if (isScrollingDown) {\n      this.triggered.down = scroll;\n    } else {\n      this.triggered.up = scroll;\n    }\n  }\n\n  isTriggeredScroll(totalToScroll, isScrollingDown: boolean) {\n    return isScrollingDown\n      ? this.triggered.down === totalToScroll\n      : this.triggered.up === totalToScroll;\n  }\n}\n","import { IPositionStats, IScrollState, IScrollerDistance } from '../models';\n\nexport function shouldFireScrollEvent(\n  container: IPositionStats,\n  distance: IScrollerDistance,\n  scrollingDown: boolean\n) {\n  let remaining: number;\n  let containerBreakpoint: number;\n  if (container.totalToScroll <= 0) {\n    return false;\n  }\n  const scrolledUntilNow = container.height + container.scrolled;\n  if (scrollingDown) {\n    remaining =\n      (container.totalToScroll - scrolledUntilNow) / container.totalToScroll;\n    containerBreakpoint = distance.down / 10;\n  } else {\n    const totalHiddenContentHeight =\n      container.scrolled + (container.totalToScroll - scrolledUntilNow);\n    remaining = container.scrolled / totalHiddenContentHeight;\n    containerBreakpoint = distance.up / 10;\n  }\n\n  const shouldFireEvent: boolean = remaining <= containerBreakpoint;\n  return shouldFireEvent;\n}\n\nexport function isScrollingDownwards(\n  lastScrollPosition: number,\n  container: IPositionStats\n) {\n  return lastScrollPosition < container.scrolled;\n}\n\nexport function getScrollStats(\n  lastScrollPosition: number,\n  container: IPositionStats,\n  distance: IScrollerDistance\n) {\n  const scrollDown = isScrollingDownwards(lastScrollPosition, container);\n  return {\n    fire: shouldFireScrollEvent(container, distance, scrollDown),\n    scrollDown\n  };\n}\n\nexport function updateScrollPosition(\n  position: number,\n  scrollState: IScrollState\n) {\n  return (scrollState.lastScrollPosition = position);\n}\n\nexport function updateTotalToScroll(\n  totalToScroll: number,\n  scrollState: IScrollState\n) {\n  if (scrollState.lastTotalToScroll !== totalToScroll) {\n    scrollState.lastTotalToScroll = scrollState.totalToScroll;\n    scrollState.totalToScroll = totalToScroll;\n  }\n}\n\nexport function isSameTotalToScroll(scrollState: IScrollState) {\n  return scrollState.totalToScroll === scrollState.lastTotalToScroll;\n}\n\nexport function updateTriggeredFlag(\n  scroll,\n  scrollState: IScrollState,\n  triggered: boolean,\n  isScrollingDown: boolean\n) {\n  if (isScrollingDown) {\n    scrollState.triggered.down = scroll;\n  } else {\n    scrollState.triggered.up = scroll;\n  }\n}\n\nexport function isTriggeredScroll(\n  totalToScroll,\n  scrollState: IScrollState,\n  isScrollingDown: boolean\n) {\n  return isScrollingDown\n    ? scrollState.triggered.down === totalToScroll\n    : scrollState.triggered.up === totalToScroll;\n}\n\nexport function updateScrollState(\n  scrollState: IScrollState,\n  scrolledUntilNow: number,\n  totalToScroll: number\n) {\n  updateScrollPosition(scrolledUntilNow, scrollState);\n  updateTotalToScroll(totalToScroll, scrollState);\n  // const isSameTotal = isSameTotalToScroll(scrollState);\n  // if (!isSameTotal) {\n  //   updateTriggeredFlag(scrollState, false, isScrollingDown);\n  // }\n}\n","import { ElementRef } from '@angular/core';\n\nimport { ContainerRef, IPositionElements, IPositionStats, IResolver } from '../models';\nimport { AxisResolver } from './axis-resolver';\n\nexport function createResolver({\n  windowElement,\n  axis\n}: IPositionElements): IResolver {\n  return createResolverWithContainer(\n    { axis, isWindow: isElementWindow(windowElement) },\n    windowElement\n  );\n}\n\nexport function createResolverWithContainer(\n  resolver,\n  windowElement: ContainerRef\n) {\n  const container =\n    resolver.isWindow || (windowElement && !windowElement.nativeElement)\n      ? windowElement\n      : windowElement.nativeElement;\n  return { ...resolver, container };\n}\n\nexport function isElementWindow(windowElement: ContainerRef): boolean {\n  const isWindow = ['Window', 'global'].some((obj: string) =>\n    Object.prototype.toString.call(windowElement).includes(obj)\n  );\n  return isWindow;\n}\n\nexport function getDocumentElement(isContainerWindow: boolean, windowElement) {\n  return isContainerWindow ? windowElement.document.documentElement : null;\n}\n\nexport function calculatePoints(element: ElementRef, resolver: IResolver) {\n  const height = extractHeightForElement(resolver);\n  return resolver.isWindow\n    ? calculatePointsForWindow(height, element, resolver)\n    : calculatePointsForElement(height, element, resolver);\n}\n\nexport function calculatePointsForWindow(\n  height: number,\n  element: ElementRef,\n  resolver: IResolver\n): IPositionStats {\n  const { axis, container, isWindow } = resolver;\n  const { offsetHeightKey, clientHeightKey } = extractHeightPropKeys(axis);\n  // scrolled until now / current y point\n  const scrolled =\n    height +\n    getElementPageYOffset(\n      getDocumentElement(isWindow, container),\n      axis,\n      isWindow\n    );\n  // total height / most bottom y point\n  const nativeElementHeight = getElementHeight(\n    element.nativeElement,\n    isWindow,\n    offsetHeightKey,\n    clientHeightKey\n  );\n  const totalToScroll =\n    getElementOffsetTop(element.nativeElement, axis, isWindow) +\n    nativeElementHeight;\n  return { height, scrolled, totalToScroll };\n}\n\nexport function calculatePointsForElement(\n  height: number,\n  element: ElementRef,\n  resolver: IResolver\n): IPositionStats {\n  const { axis, container } = resolver;\n  // perhaps use container.offsetTop instead of 'scrollTop'\n  const scrolled = container[axis.scrollTopKey()];\n  const totalToScroll = container[axis.scrollHeightKey()];\n  return { height, scrolled, totalToScroll };\n}\n\nexport function extractHeightPropKeys(axis: AxisResolver) {\n  return {\n    offsetHeightKey: axis.offsetHeightKey(),\n    clientHeightKey: axis.clientHeightKey()\n  };\n}\n\nexport function extractHeightForElement({\n  container,\n  isWindow,\n  axis\n}: IResolver) {\n  const { offsetHeightKey, clientHeightKey } = extractHeightPropKeys(axis);\n  return getElementHeight(\n    container,\n    isWindow,\n    offsetHeightKey,\n    clientHeightKey\n  );\n}\nexport function getElementHeight(\n  elem: any,\n  isWindow: boolean,\n  offsetHeightKey: string,\n  clientHeightKey: string\n) {\n  if (isNaN(elem[offsetHeightKey])) {\n    const docElem = getDocumentElement(isWindow, elem);\n    return docElem ? docElem[clientHeightKey] : 0;\n  } else {\n    return elem[offsetHeightKey];\n  }\n}\n\nexport function getElementOffsetTop(\n  elem: ContainerRef,\n  axis: AxisResolver,\n  isWindow: boolean\n) {\n  const topKey = axis.topKey();\n  // elem = elem.nativeElement;\n  if (!elem.getBoundingClientRect) {\n    // || elem.css('none')) {\n    return;\n  }\n  return (\n    elem.getBoundingClientRect()[topKey] +\n    getElementPageYOffset(elem, axis, isWindow)\n  );\n}\n\nexport function getElementPageYOffset(\n  elem: ContainerRef,\n  axis: AxisResolver,\n  isWindow: boolean\n) {\n  const pageYOffset = axis.pageYOffsetKey();\n  const scrollTop = axis.scrollTopKey();\n  const offsetTop = axis.offsetTopKey();\n\n  if (isNaN(window[pageYOffset])) {\n    return getDocumentElement(isWindow, elem)[scrollTop];\n  } else if (elem.ownerDocument) {\n    return elem.ownerDocument.defaultView[pageYOffset];\n  } else {\n    return elem[offsetTop];\n  }\n}\n","import { InfiniteScrollEvent, IPositionStats } from '../models';\n\nexport interface IScrollerProps extends IDistanceRange {\n  container: IPositionStats;\n  alwaysCallback: boolean;\n  disabled: boolean;\n}\n\nexport interface ITriggerEvents {\n  down: (event: any) => any;\n  up: (event: any) => any;\n}\n\nexport interface IDistanceRange {\n  down: number;\n  up: number;\n}\n\nexport interface IScrollConfig {\n  alwaysCallback: boolean;\n  shouldFireScrollEvent: boolean;\n}\n\nexport function shouldTriggerEvents(\n  alwaysCallback: boolean,\n  shouldFireScrollEvent: boolean,\n  isTriggeredCurrentTotal: boolean\n) {\n  if (alwaysCallback && shouldFireScrollEvent) {\n    return true;\n  }\n  if (!isTriggeredCurrentTotal && shouldFireScrollEvent) {\n    return true;\n  }\n  return false;\n}\n","const VerticalProps = {\n  clientHeight: \"clientHeight\",\n  offsetHeight: \"offsetHeight\",\n  scrollHeight: \"scrollHeight\",\n  pageYOffset: \"pageYOffset\",\n  offsetTop: \"offsetTop\",\n  scrollTop: \"scrollTop\",\n  top: \"top\"\n};\n\nconst HorizontalProps = {\n  clientHeight: \"clientWidth\",\n  offsetHeight: \"offsetWidth\",\n  scrollHeight: \"scrollWidth\",\n  pageYOffset: \"pageXOffset\",\n  offsetTop: \"offsetLeft\",\n  scrollTop: \"scrollLeft\",\n  top: \"left\"\n};\n\nexport class AxisResolver {\n  private propsMap: any;\n\n  constructor(private vertical: boolean = true) {\n    this.propsMap = vertical ? VerticalProps : HorizontalProps;\n  }\n  clientHeightKey() {\n    return this.propsMap.clientHeight;\n  }\n  offsetHeightKey() {\n    return this.propsMap.offsetHeight;\n  }\n  scrollHeightKey() {\n    return this.propsMap.scrollHeight;\n  }\n  pageYOffsetKey() {\n    return this.propsMap.pageYOffset;\n  }\n  offsetTopKey() {\n    return this.propsMap.offsetTop;\n  }\n  scrollTopKey() {\n    return this.propsMap.scrollTop;\n  }\n  topKey() {\n    return this.propsMap.top;\n  }\n}\n","import { ElementRef, SimpleChange } from '@angular/core';\n\nexport function resolveContainerElement(\n  selector: string | any,\n  scrollWindow,\n  defaultElement,\n  fromRoot: boolean\n): any {\n  const hasWindow = window && !!window.document && window.document.documentElement;\n  let container = hasWindow && scrollWindow ? window : defaultElement;\n  if (selector) {\n    const containerIsString =\n      selector && hasWindow && typeof selector === 'string';\n    container = containerIsString\n      ? findElement(selector, defaultElement.nativeElement, fromRoot)\n      : selector;\n    if (!container) {\n      throw new Error('ngx-infinite-scroll {resolveContainerElement()}: selector for');\n    }\n  }\n  return container;\n}\n\nexport function findElement(\n  selector: string | any,\n  customRoot: ElementRef | any,\n  fromRoot: boolean\n) {\n  const rootEl = fromRoot ? window.document : customRoot;\n  return rootEl.querySelector(selector);\n}\n\nexport function inputPropChanged(prop: SimpleChange): boolean {\n  return prop && !prop.firstChange;\n}\n\nexport function hasWindowDefined(): boolean {\n  return typeof window !== 'undefined';\n}\n"],"names":[],"mappings":"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"}